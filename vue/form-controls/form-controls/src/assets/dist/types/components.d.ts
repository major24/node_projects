/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface CxActivity {
    'header': string;
  }
  interface CxActivityAttributes extends StencilHTMLAttributes {
    'header'?: string;
  }

  interface CxWorkflowTemplate {
    'activities': any;
    'header': string;
  }
  interface CxWorkflowTemplateAttributes extends StencilHTMLAttributes {
    'activities'?: any;
    'header'?: string;
  }

  interface CxWorkflow {
    'header': string;
  }
  interface CxWorkflowAttributes extends StencilHTMLAttributes {
    'header'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MyComponent': Components.MyComponent;
    'CxActivity': Components.CxActivity;
    'CxWorkflowTemplate': Components.CxWorkflowTemplate;
    'CxWorkflow': Components.CxWorkflow;
  }

  interface StencilIntrinsicElements {
    'my-component': Components.MyComponentAttributes;
    'cx-activity': Components.CxActivityAttributes;
    'cx-workflow-template': Components.CxWorkflowTemplateAttributes;
    'cx-workflow': Components.CxWorkflowAttributes;
  }


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLCxActivityElement extends Components.CxActivity, HTMLStencilElement {}
  var HTMLCxActivityElement: {
    prototype: HTMLCxActivityElement;
    new (): HTMLCxActivityElement;
  };

  interface HTMLCxWorkflowTemplateElement extends Components.CxWorkflowTemplate, HTMLStencilElement {}
  var HTMLCxWorkflowTemplateElement: {
    prototype: HTMLCxWorkflowTemplateElement;
    new (): HTMLCxWorkflowTemplateElement;
  };

  interface HTMLCxWorkflowElement extends Components.CxWorkflow, HTMLStencilElement {}
  var HTMLCxWorkflowElement: {
    prototype: HTMLCxWorkflowElement;
    new (): HTMLCxWorkflowElement;
  };

  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement
    'cx-activity': HTMLCxActivityElement
    'cx-workflow-template': HTMLCxWorkflowTemplateElement
    'cx-workflow': HTMLCxWorkflowElement
  }

  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'cx-activity': HTMLCxActivityElement;
    'cx-workflow-template': HTMLCxWorkflowTemplateElement;
    'cx-workflow': HTMLCxWorkflowElement;
  }


}
