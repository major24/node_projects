/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface CtxAddressContainer {
    '_editing': string;
    'addresses': string;
  }
  interface CtxAddressContainerAttributes extends StencilHTMLAttributes {
    '_editing'?: string;
    'addresses'?: string;
  }

  interface CtxAddressEdit {
    'address': string;
  }
  interface CtxAddressEditAttributes extends StencilHTMLAttributes {
    'address'?: string;
  }

  interface CtxAddressEditableContainer {
    '_editing': string;
    'addresses': string;
    'cssToggle': string;
  }
  interface CtxAddressEditableContainerAttributes extends StencilHTMLAttributes {
    '_editing'?: string;
    'addresses'?: string;
    'cssToggle'?: string;
  }

  interface CtxAddressTest {
    'cssToggle': string;
    'name': string;
  }
  interface CtxAddressTestAttributes extends StencilHTMLAttributes {
    'cssToggle'?: string;
    'name'?: string;
    'onSearchStarted'?: (event: CustomEvent) => void;
  }

  interface CtxAddress {
    'address': string;
  }
  interface CtxAddressAttributes extends StencilHTMLAttributes {
    'address'?: string;
  }

  interface ShowMsgContainer {
    'data': string;
  }
  interface ShowMsgContainerAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface ShowMsg {
    'data': string;
  }
  interface ShowMsgAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface ShowPersonInfoContainer {
    'data': string;
  }
  interface ShowPersonInfoContainerAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface ShowPersonInfo {
    'name': string;
  }
  interface ShowPersonInfoAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface AuthorBookContainer {
    'data': string;
  }
  interface AuthorBookContainerAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface AuthorComp {
    'name': string;
  }
  interface AuthorCompAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface AuthorEdit {
    'name': string;
  }
  interface AuthorEditAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'onOnUpdate'?: (event: CustomEvent) => void;
  }

  interface BookComp {
    'title': string;
  }
  interface BookCompAttributes extends StencilHTMLAttributes {
    'title'?: string;
  }

  interface ChildComponentOne {
    'name': string;
  }
  interface ChildComponentOneAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface ParentChildContainer {
    'name': string;
  }
  interface ParentChildContainerAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface ParentComponent {
    'name': string;
  }
  interface ParentComponentAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface MnError {
    'error': string;
    'errors': [];
  }
  interface MnErrorAttributes extends StencilHTMLAttributes {
    'error'?: string;
    'errors'?: [];
  }

  interface HelloWorld {
    'name': string;
    'showPrompt': () => void;
  }
  interface HelloWorldAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'onSearchStarted'?: (event: CustomEvent) => void;
  }

  interface PhoneDisplay {
    'phoneNumber': string;
    'phoneType': string;
  }
  interface PhoneDisplayAttributes extends StencilHTMLAttributes {
    'phoneNumber'?: string;
    'phoneType'?: string;
  }

  interface PhoneEdit {
    'phoneNumber': string;
    'phoneType': string;
  }
  interface PhoneEditAttributes extends StencilHTMLAttributes {
    'onOnChangePhoneNumber'?: (event: CustomEvent) => void;
    'phoneNumber'?: string;
    'phoneType'?: string;
  }

  interface PhoneUpdatableContainer {
    'data': string;
  }
  interface PhoneUpdatableContainerAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface HostShadowDom {
    'name': string;
  }
  interface HostShadowDomAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface MyListItem {
    'data': string;
  }
  interface MyListItemAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface MyList {
    'data': string;
  }
  interface MyListAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface MnLabel {
    'label': string;
  }
  interface MnLabelAttributes extends StencilHTMLAttributes {
    'label'?: string;
  }

  interface CtxPhoneDisplayContainer {
    'data': string;
  }
  interface CtxPhoneDisplayContainerAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface CtxPhoneDisplay {
    'data': string;
  }
  interface CtxPhoneDisplayAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface CtxPhoneEdit {
    'data': string;
  }
  interface CtxPhoneEditAttributes extends StencilHTMLAttributes {
    'data'?: string;
    'onOnPhoneUpdate'?: (event: CustomEvent) => void;
  }

  interface CtxPhoneUpdatable {
    'data': string;
  }
  interface CtxPhoneUpdatableAttributes extends StencilHTMLAttributes {
    'data'?: string;
  }

  interface CtxPostCode {
    'methods': any;
    'postCode': string;
    'showPrompt': () => void;
  }
  interface CtxPostCodeAttributes extends StencilHTMLAttributes {
    'methods'?: any;
    'onOnChangePostCode'?: (event: CustomEvent) => void;
    'postCode'?: string;
  }

  interface PropStateTest {
    'nameProp': string;
  }
  interface PropStateTestAttributes extends StencilHTMLAttributes {
    'nameProp'?: string;
  }

  interface MnTelephone {
    'label': string;
  }
  interface MnTelephoneAttributes extends StencilHTMLAttributes {
    'label'?: string;
  }

  interface MnText {
    'error': string;
    'label': string;
    'placeHolder': string;
    'value': string;
    'width': string;
  }
  interface MnTextAttributes extends StencilHTMLAttributes {
    'error'?: string;
    'label'?: string;
    'onMnChanged'?: (event: CustomEvent<string>) => void;
    'placeHolder'?: string;
    'value'?: string;
    'width'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CtxAddressContainer': Components.CtxAddressContainer;
    'CtxAddressEdit': Components.CtxAddressEdit;
    'CtxAddressEditableContainer': Components.CtxAddressEditableContainer;
    'CtxAddressTest': Components.CtxAddressTest;
    'CtxAddress': Components.CtxAddress;
    'ShowMsgContainer': Components.ShowMsgContainer;
    'ShowMsg': Components.ShowMsg;
    'ShowPersonInfoContainer': Components.ShowPersonInfoContainer;
    'ShowPersonInfo': Components.ShowPersonInfo;
    'AuthorBookContainer': Components.AuthorBookContainer;
    'AuthorComp': Components.AuthorComp;
    'AuthorEdit': Components.AuthorEdit;
    'BookComp': Components.BookComp;
    'ChildComponentOne': Components.ChildComponentOne;
    'ParentChildContainer': Components.ParentChildContainer;
    'ParentComponent': Components.ParentComponent;
    'MnError': Components.MnError;
    'HelloWorld': Components.HelloWorld;
    'PhoneDisplay': Components.PhoneDisplay;
    'PhoneEdit': Components.PhoneEdit;
    'PhoneUpdatableContainer': Components.PhoneUpdatableContainer;
    'HostShadowDom': Components.HostShadowDom;
    'MyListItem': Components.MyListItem;
    'MyList': Components.MyList;
    'MnLabel': Components.MnLabel;
    'CtxPhoneDisplayContainer': Components.CtxPhoneDisplayContainer;
    'CtxPhoneDisplay': Components.CtxPhoneDisplay;
    'CtxPhoneEdit': Components.CtxPhoneEdit;
    'CtxPhoneUpdatable': Components.CtxPhoneUpdatable;
    'CtxPostCode': Components.CtxPostCode;
    'PropStateTest': Components.PropStateTest;
    'MnTelephone': Components.MnTelephone;
    'MnText': Components.MnText;
  }

  interface StencilIntrinsicElements {
    'ctx-address-container': Components.CtxAddressContainerAttributes;
    'ctx-address-edit': Components.CtxAddressEditAttributes;
    'ctx-address-editable-container': Components.CtxAddressEditableContainerAttributes;
    'ctx-address-test': Components.CtxAddressTestAttributes;
    'ctx-address': Components.CtxAddressAttributes;
    'show-msg-container': Components.ShowMsgContainerAttributes;
    'show-msg': Components.ShowMsgAttributes;
    'show-person-info-container': Components.ShowPersonInfoContainerAttributes;
    'show-person-info': Components.ShowPersonInfoAttributes;
    'author-book-container': Components.AuthorBookContainerAttributes;
    'author-comp': Components.AuthorCompAttributes;
    'author-edit': Components.AuthorEditAttributes;
    'book-comp': Components.BookCompAttributes;
    'child-component-one': Components.ChildComponentOneAttributes;
    'parent-child-container': Components.ParentChildContainerAttributes;
    'parent-component': Components.ParentComponentAttributes;
    'mn-error': Components.MnErrorAttributes;
    'hello-world': Components.HelloWorldAttributes;
    'phone-display': Components.PhoneDisplayAttributes;
    'phone-edit': Components.PhoneEditAttributes;
    'phone-updatable-container': Components.PhoneUpdatableContainerAttributes;
    'host-shadow-dom': Components.HostShadowDomAttributes;
    'my-list-item': Components.MyListItemAttributes;
    'my-list': Components.MyListAttributes;
    'mn-label': Components.MnLabelAttributes;
    'ctx-phone-display-container': Components.CtxPhoneDisplayContainerAttributes;
    'ctx-phone-display': Components.CtxPhoneDisplayAttributes;
    'ctx-phone-edit': Components.CtxPhoneEditAttributes;
    'ctx-phone-updatable': Components.CtxPhoneUpdatableAttributes;
    'ctx-post-code': Components.CtxPostCodeAttributes;
    'prop-state-test': Components.PropStateTestAttributes;
    'mn-telephone': Components.MnTelephoneAttributes;
    'mn-text': Components.MnTextAttributes;
  }


  interface HTMLCtxAddressContainerElement extends Components.CtxAddressContainer, HTMLStencilElement {}
  var HTMLCtxAddressContainerElement: {
    prototype: HTMLCtxAddressContainerElement;
    new (): HTMLCtxAddressContainerElement;
  };

  interface HTMLCtxAddressEditElement extends Components.CtxAddressEdit, HTMLStencilElement {}
  var HTMLCtxAddressEditElement: {
    prototype: HTMLCtxAddressEditElement;
    new (): HTMLCtxAddressEditElement;
  };

  interface HTMLCtxAddressEditableContainerElement extends Components.CtxAddressEditableContainer, HTMLStencilElement {}
  var HTMLCtxAddressEditableContainerElement: {
    prototype: HTMLCtxAddressEditableContainerElement;
    new (): HTMLCtxAddressEditableContainerElement;
  };

  interface HTMLCtxAddressTestElement extends Components.CtxAddressTest, HTMLStencilElement {}
  var HTMLCtxAddressTestElement: {
    prototype: HTMLCtxAddressTestElement;
    new (): HTMLCtxAddressTestElement;
  };

  interface HTMLCtxAddressElement extends Components.CtxAddress, HTMLStencilElement {}
  var HTMLCtxAddressElement: {
    prototype: HTMLCtxAddressElement;
    new (): HTMLCtxAddressElement;
  };

  interface HTMLShowMsgContainerElement extends Components.ShowMsgContainer, HTMLStencilElement {}
  var HTMLShowMsgContainerElement: {
    prototype: HTMLShowMsgContainerElement;
    new (): HTMLShowMsgContainerElement;
  };

  interface HTMLShowMsgElement extends Components.ShowMsg, HTMLStencilElement {}
  var HTMLShowMsgElement: {
    prototype: HTMLShowMsgElement;
    new (): HTMLShowMsgElement;
  };

  interface HTMLShowPersonInfoContainerElement extends Components.ShowPersonInfoContainer, HTMLStencilElement {}
  var HTMLShowPersonInfoContainerElement: {
    prototype: HTMLShowPersonInfoContainerElement;
    new (): HTMLShowPersonInfoContainerElement;
  };

  interface HTMLShowPersonInfoElement extends Components.ShowPersonInfo, HTMLStencilElement {}
  var HTMLShowPersonInfoElement: {
    prototype: HTMLShowPersonInfoElement;
    new (): HTMLShowPersonInfoElement;
  };

  interface HTMLAuthorBookContainerElement extends Components.AuthorBookContainer, HTMLStencilElement {}
  var HTMLAuthorBookContainerElement: {
    prototype: HTMLAuthorBookContainerElement;
    new (): HTMLAuthorBookContainerElement;
  };

  interface HTMLAuthorCompElement extends Components.AuthorComp, HTMLStencilElement {}
  var HTMLAuthorCompElement: {
    prototype: HTMLAuthorCompElement;
    new (): HTMLAuthorCompElement;
  };

  interface HTMLAuthorEditElement extends Components.AuthorEdit, HTMLStencilElement {}
  var HTMLAuthorEditElement: {
    prototype: HTMLAuthorEditElement;
    new (): HTMLAuthorEditElement;
  };

  interface HTMLBookCompElement extends Components.BookComp, HTMLStencilElement {}
  var HTMLBookCompElement: {
    prototype: HTMLBookCompElement;
    new (): HTMLBookCompElement;
  };

  interface HTMLChildComponentOneElement extends Components.ChildComponentOne, HTMLStencilElement {}
  var HTMLChildComponentOneElement: {
    prototype: HTMLChildComponentOneElement;
    new (): HTMLChildComponentOneElement;
  };

  interface HTMLParentChildContainerElement extends Components.ParentChildContainer, HTMLStencilElement {}
  var HTMLParentChildContainerElement: {
    prototype: HTMLParentChildContainerElement;
    new (): HTMLParentChildContainerElement;
  };

  interface HTMLParentComponentElement extends Components.ParentComponent, HTMLStencilElement {}
  var HTMLParentComponentElement: {
    prototype: HTMLParentComponentElement;
    new (): HTMLParentComponentElement;
  };

  interface HTMLMnErrorElement extends Components.MnError, HTMLStencilElement {}
  var HTMLMnErrorElement: {
    prototype: HTMLMnErrorElement;
    new (): HTMLMnErrorElement;
  };

  interface HTMLHelloWorldElement extends Components.HelloWorld, HTMLStencilElement {}
  var HTMLHelloWorldElement: {
    prototype: HTMLHelloWorldElement;
    new (): HTMLHelloWorldElement;
  };

  interface HTMLPhoneDisplayElement extends Components.PhoneDisplay, HTMLStencilElement {}
  var HTMLPhoneDisplayElement: {
    prototype: HTMLPhoneDisplayElement;
    new (): HTMLPhoneDisplayElement;
  };

  interface HTMLPhoneEditElement extends Components.PhoneEdit, HTMLStencilElement {}
  var HTMLPhoneEditElement: {
    prototype: HTMLPhoneEditElement;
    new (): HTMLPhoneEditElement;
  };

  interface HTMLPhoneUpdatableContainerElement extends Components.PhoneUpdatableContainer, HTMLStencilElement {}
  var HTMLPhoneUpdatableContainerElement: {
    prototype: HTMLPhoneUpdatableContainerElement;
    new (): HTMLPhoneUpdatableContainerElement;
  };

  interface HTMLHostShadowDomElement extends Components.HostShadowDom, HTMLStencilElement {}
  var HTMLHostShadowDomElement: {
    prototype: HTMLHostShadowDomElement;
    new (): HTMLHostShadowDomElement;
  };

  interface HTMLMyListItemElement extends Components.MyListItem, HTMLStencilElement {}
  var HTMLMyListItemElement: {
    prototype: HTMLMyListItemElement;
    new (): HTMLMyListItemElement;
  };

  interface HTMLMyListElement extends Components.MyList, HTMLStencilElement {}
  var HTMLMyListElement: {
    prototype: HTMLMyListElement;
    new (): HTMLMyListElement;
  };

  interface HTMLMnLabelElement extends Components.MnLabel, HTMLStencilElement {}
  var HTMLMnLabelElement: {
    prototype: HTMLMnLabelElement;
    new (): HTMLMnLabelElement;
  };

  interface HTMLCtxPhoneDisplayContainerElement extends Components.CtxPhoneDisplayContainer, HTMLStencilElement {}
  var HTMLCtxPhoneDisplayContainerElement: {
    prototype: HTMLCtxPhoneDisplayContainerElement;
    new (): HTMLCtxPhoneDisplayContainerElement;
  };

  interface HTMLCtxPhoneDisplayElement extends Components.CtxPhoneDisplay, HTMLStencilElement {}
  var HTMLCtxPhoneDisplayElement: {
    prototype: HTMLCtxPhoneDisplayElement;
    new (): HTMLCtxPhoneDisplayElement;
  };

  interface HTMLCtxPhoneEditElement extends Components.CtxPhoneEdit, HTMLStencilElement {}
  var HTMLCtxPhoneEditElement: {
    prototype: HTMLCtxPhoneEditElement;
    new (): HTMLCtxPhoneEditElement;
  };

  interface HTMLCtxPhoneUpdatableElement extends Components.CtxPhoneUpdatable, HTMLStencilElement {}
  var HTMLCtxPhoneUpdatableElement: {
    prototype: HTMLCtxPhoneUpdatableElement;
    new (): HTMLCtxPhoneUpdatableElement;
  };

  interface HTMLCtxPostCodeElement extends Components.CtxPostCode, HTMLStencilElement {}
  var HTMLCtxPostCodeElement: {
    prototype: HTMLCtxPostCodeElement;
    new (): HTMLCtxPostCodeElement;
  };

  interface HTMLPropStateTestElement extends Components.PropStateTest, HTMLStencilElement {}
  var HTMLPropStateTestElement: {
    prototype: HTMLPropStateTestElement;
    new (): HTMLPropStateTestElement;
  };

  interface HTMLMnTelephoneElement extends Components.MnTelephone, HTMLStencilElement {}
  var HTMLMnTelephoneElement: {
    prototype: HTMLMnTelephoneElement;
    new (): HTMLMnTelephoneElement;
  };

  interface HTMLMnTextElement extends Components.MnText, HTMLStencilElement {}
  var HTMLMnTextElement: {
    prototype: HTMLMnTextElement;
    new (): HTMLMnTextElement;
  };

  interface HTMLElementTagNameMap {
    'ctx-address-container': HTMLCtxAddressContainerElement
    'ctx-address-edit': HTMLCtxAddressEditElement
    'ctx-address-editable-container': HTMLCtxAddressEditableContainerElement
    'ctx-address-test': HTMLCtxAddressTestElement
    'ctx-address': HTMLCtxAddressElement
    'show-msg-container': HTMLShowMsgContainerElement
    'show-msg': HTMLShowMsgElement
    'show-person-info-container': HTMLShowPersonInfoContainerElement
    'show-person-info': HTMLShowPersonInfoElement
    'author-book-container': HTMLAuthorBookContainerElement
    'author-comp': HTMLAuthorCompElement
    'author-edit': HTMLAuthorEditElement
    'book-comp': HTMLBookCompElement
    'child-component-one': HTMLChildComponentOneElement
    'parent-child-container': HTMLParentChildContainerElement
    'parent-component': HTMLParentComponentElement
    'mn-error': HTMLMnErrorElement
    'hello-world': HTMLHelloWorldElement
    'phone-display': HTMLPhoneDisplayElement
    'phone-edit': HTMLPhoneEditElement
    'phone-updatable-container': HTMLPhoneUpdatableContainerElement
    'host-shadow-dom': HTMLHostShadowDomElement
    'my-list-item': HTMLMyListItemElement
    'my-list': HTMLMyListElement
    'mn-label': HTMLMnLabelElement
    'ctx-phone-display-container': HTMLCtxPhoneDisplayContainerElement
    'ctx-phone-display': HTMLCtxPhoneDisplayElement
    'ctx-phone-edit': HTMLCtxPhoneEditElement
    'ctx-phone-updatable': HTMLCtxPhoneUpdatableElement
    'ctx-post-code': HTMLCtxPostCodeElement
    'prop-state-test': HTMLPropStateTestElement
    'mn-telephone': HTMLMnTelephoneElement
    'mn-text': HTMLMnTextElement
  }

  interface ElementTagNameMap {
    'ctx-address-container': HTMLCtxAddressContainerElement;
    'ctx-address-edit': HTMLCtxAddressEditElement;
    'ctx-address-editable-container': HTMLCtxAddressEditableContainerElement;
    'ctx-address-test': HTMLCtxAddressTestElement;
    'ctx-address': HTMLCtxAddressElement;
    'show-msg-container': HTMLShowMsgContainerElement;
    'show-msg': HTMLShowMsgElement;
    'show-person-info-container': HTMLShowPersonInfoContainerElement;
    'show-person-info': HTMLShowPersonInfoElement;
    'author-book-container': HTMLAuthorBookContainerElement;
    'author-comp': HTMLAuthorCompElement;
    'author-edit': HTMLAuthorEditElement;
    'book-comp': HTMLBookCompElement;
    'child-component-one': HTMLChildComponentOneElement;
    'parent-child-container': HTMLParentChildContainerElement;
    'parent-component': HTMLParentComponentElement;
    'mn-error': HTMLMnErrorElement;
    'hello-world': HTMLHelloWorldElement;
    'phone-display': HTMLPhoneDisplayElement;
    'phone-edit': HTMLPhoneEditElement;
    'phone-updatable-container': HTMLPhoneUpdatableContainerElement;
    'host-shadow-dom': HTMLHostShadowDomElement;
    'my-list-item': HTMLMyListItemElement;
    'my-list': HTMLMyListElement;
    'mn-label': HTMLMnLabelElement;
    'ctx-phone-display-container': HTMLCtxPhoneDisplayContainerElement;
    'ctx-phone-display': HTMLCtxPhoneDisplayElement;
    'ctx-phone-edit': HTMLCtxPhoneEditElement;
    'ctx-phone-updatable': HTMLCtxPhoneUpdatableElement;
    'ctx-post-code': HTMLCtxPostCodeElement;
    'prop-state-test': HTMLPropStateTestElement;
    'mn-telephone': HTMLMnTelephoneElement;
    'mn-text': HTMLMnTextElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
