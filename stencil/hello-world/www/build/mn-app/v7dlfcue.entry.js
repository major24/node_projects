const t=window.MnApp.h;class a{componentWillLoad(){console.log("componentWillLoad()"),this._data=this.data}render(){return t("div",null,t("h3",null,"MSG: ",this._data," "))}static get is(){return"show-msg"}static get encapsulation(){return"shadow"}static get properties(){return{_data:{state:!0},data:{type:String,attr:"data"}}}}class e{constructor(){this.textValue="My new msg.."}componentWillLoad(){console.log("componentWillLoad()"),this._data=JSON.parse(this.data),console.log(this._data)}componentDidLoad(){console.log("componentDidLoad()")}componentWillUpdate(){console.log("componentWillUpdate()")}componentDidUpdate(){console.log("componentDidUpdate()")}update(t){console.log("update array"+t),console.log(this._data),console.log(this.textValue),this._data=[...this._data,this.textValue]}handleChangeState(t){this.textValue=t.target.value}render(){return t("div",null,this._data.map(a=>t("show-msg",{data:a})),t("hr",null),t("div",null,"Update STATE (Array) from within component: (will update AND RE-RENDER)",t("br",null),t("input",{type:"text",id:"mystate",value:this.textValue,onInput:t=>this.handleChangeState(t)})),t("button",{onClick:t=>this.update(t)},"Update Array with Msg"))}static get is(){return"show-msg-container"}static get encapsulation(){return"shadow"}static get properties(){return{_data:{state:!0},data:{type:String,attr:"data"},textValue:{state:!0}}}}export{a as ShowMsg,e as ShowMsgContainer};